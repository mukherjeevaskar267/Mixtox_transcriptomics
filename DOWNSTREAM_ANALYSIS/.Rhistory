installed.packages()
installed.packages(ViSEAGO)
library(ViSEAGO)
update.packages("htmltools")
library(ViSEAGO)
BiocManager::install("ViSEAGO")
library(DESeq2)
library(ViSEAGO)
remove.packages(rlang)
remove.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(DESeq2)
install.packages(c("BH", "bit", "cli", "dbplyr", "digest", "DT", "evaluate", "formatR", "htmltools", "matrixStats", "pak", "png", "Rcpp", "RcppArmadillo", "RCurl", "rmarkdown", "RSQLite", "vctrs", "XML"))
install.packages(c("BH", "bit", "cli", "dbplyr", "digest", "DT", "evaluate", "formatR", "htmltools", "matrixStats", "pak", "png", "Rcpp", "RcppArmadillo", "RCurl", "rmarkdown", "RSQLite", "vctrs", "XML"))
install.packages(c("BH", "bit", "cli", "dbplyr", "digest", "DT", "evaluate", "formatR", "htmltools", "matrixStats", "pak", "png", "Rcpp", "RcppArmadillo", "RCurl", "rmarkdown", "RSQLite", "vctrs", "XML"))
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
BiocManager::install("DESeq2")
library(DESeq2)
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
library(DESeq2)
?vctrs
BiocManager::install("vctrs")
library(ggplot2)
library(DESeq2)
install.packages(c("bit", "cli", "matrixStats", "png", "Rcpp", "RCurl", "RSQLite", "vctrs", "XML"))
library(DESeq2)
remove.packages("DESeq2")
library(ggplot2)
install.packages("vctrs")
install.packages("vctrs")
library(vctrs)
remove.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
.libPaths()
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
library(DESeq2)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
input_files <- list.files(path = "COMPILED_DATA/GO_GENE_LISTS/GO_Input/", pattern = ".txt", full.names = TRUE)
input_files
input_genes <- select(org.Sc.sgd.db, keys=input_genes, keytype="SGD", columns="GENENAME")
library(AnnotationDbi)
library(org.Sc.sgd.db)
BiocManager::install("org.Sc.sgd.db")
library(org.Sc.sgd.db)
selection<-scan(input_file,
quiet=TRUE,
what="")
selection<-scan(input_files[1],
quiet=TRUE,
what="")
head(selection)
selection
input_genes <- read.table(input_files[1], header = F, stringsAsFactors = F)
input_genes <- input_genes[,1]
input_genes
input_genes <- select(org.Sc.sgd.db, keys=input_genes, keytype="SGD", columns="GENENAME")
input_genes
background_genes <- select(org.Sc.sgd.db, keys = background_genes, keytype = "SGD", column = "GENENAME")
length(background_genes)
dim(background_genes)
head(background_genes, 100)
tail(background_genes, 100)
?new
BiocManager::install("ViSEAGO")
library(ViSEAGO)
library(vctrs)
install.packages("vctrs")
install.packages("vctrs")
library(vctrs)
remove.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
library(ViSEAGO)
Uniprot<-ViSEAGO::Uniprot2GO()
ViSEAGO::available_organisms(Uniprot)
Bioconductor<-ViSEAGO::Bioconductor2GO()
ViSEAGO::available_organisms(Bioconductor)
ViSEAGO::available_organisms(Uniprot)
ViSEAGO::available_organisms(Bioconductor)
help(ViSEAGO)
Ensembl<-ViSEAGO::Ensembl2GO()
ViSEAGO::available_organisms(Ensembl)
EntrezGene<-ViSEAGO::EntrezGene2GO()
ViSEAGO::available_organisms(EntrezGene)
BiocManager::install("clusterProfiler")
library(clusterProfiler)
knitr::opts_chunk$set(echo = TRUE)
input_genes <- read.table(input_files[1], header = F, stringsAsFactors = F)
input_genes <- as.character(input_genes[,1])
input_genes
head(org.Sc.sgd.db)
columns(org.Sc.sgd.db)
colnames(org.Sc.sgd.db)
library(AnnotationDbi)
colnames(org.Sc.sgd.db)
keytypes(org.Sc.sgd.db)
library(org.Sc.sgd.db)
colnames(org.Sc.sgd.db)
keytypes(org.Sc.sgd.db)
columns(org.Sc.sgd.db)
input_files
Go_output <- enrichGO(gene = input_genes, OrgDb = org.Sc.sgd.db, keyType = "SGD", ont = "BP", pvalueCutoff = 0.1, universe = "COMPILED_DATA/GO_GENE_LISTS/Background_all.txt")
input_genes <- read.table(input_files[2], header = F, stringsAsFactors = F)
input_genes <- as.character(input_genes[,1])
Go_output <- enrichGO(gene = input_genes, OrgDb = org.Sc.sgd.db, keyType = "SGD", ont = "BP", pvalueCutoff = 0.1, universe = "COMPILED_DATA/GO_GENE_LISTS/Background_all.txt")
background_genes_all <- read.table(file = "COMPILED_DATA/GO_GENE_LISTS/Background_all.txt", header = F, stringsAsFactors = F)
background_genes_all <- background_genes_all[,1]
input_genes <- read.table(input_files[1], header = F, stringsAsFactors = F)
input_genes <- input_genes[,1]
Go_output <- enrichGO(gene = input_genes, OrgDb = org.Sc.sgd.db, keyType = "SGD", ont = "BP", pvalueCutoff = 0.1, universe = background_genes_all)
as.data.frame(Go_output)
output_file <- paste0("COMPILED_DATA/GO_OUTPUT/", gsub(".txt", "_output.txt", basename(input_files[1])))
output_file
write.table(Go_output, file = output_file, sep = ",", row.names = F, col.names = T)
write.table(Go_output, file = output_file, sep = ",", row.names = F, col.names = T, append = TRUE)
write.table(Go_output, file = output_file, sep = ",", row.names = F, col.names = T, append = TRUE)
output_file <- paste0("COMPILED_DATA/GO_OUTPUT/", gsub(".txt", "_output.csv", basename(input_files[1])))
write.table(Go_output, file = output_file, sep = ",", row.names = F, col.names = T, append = TRUE)
columns(org.Sc.sgd.db)
input_genes_genename <- bitr(input_genes, fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
head(input_genes_genename, 100)
tail(input_genes_genename, 100)
input_genes_genename
tail(input_genes_genename, 500)
background_genename_all <- bitr(background_genes_all, fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
dim(input_genes_genename)
input_files <- list.files(path = "COMPILED_DATA/GO_GENE_LISTS/GO_Input/", pattern = ".txt", full.names = TRUE)
input_genes <- read.table(input_files[1], header = F, stringsAsFactors = F)
input_genes <- input_genes[,1]
input_genename <- bitr(input_genes, fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
background_genes_all <- read.table(file = "COMPILED_DATA/GO_GENE_LISTS/Background_all.txt", header = F, stringsAsFactors = F)
background_genes_all <- background_genes_all[,1]
background_genename_all <- bitr(background_genes_all, fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
Go_output <- enrichGO(gene = input_genes_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "SGD", ont = "BP", pvalueCutoff = 0.1, universe = background_genename_all[,2])
output_file <- paste0("COMPILED_DATA/GO_OUTPUT/", gsub(".txt", "_output.csv", basename(input_files[1])))
write.table(Go_output, file = output_file, sep = ",", row.names = F, col.names = T, append = TRUE)
input_files <- list.files(path = "COMPILED_DATA/GO_GENE_LISTS/GO_Input/", pattern = ".txt", full.names = TRUE)
input_genes <- read.table(input_files[1], header = F, stringsAsFactors = F)
input_genes <- input_genes[,1]
input_genename <- bitr(input_genes, fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
background_genes_all <- read.table(file = "COMPILED_DATA/GO_GENE_LISTS/Background_all.txt", header = F, stringsAsFactors = F)
background_genes_all <- background_genes_all[,1]
background_genename_all <- bitr(background_genes_all, fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
Go_output <- enrichGO(gene = input_genes_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "SGD", ont = "BP", pvalueCutoff = 0.1, universe = background_genename_all[,2])
output_file <- paste0("COMPILED_DATA/GO_OUTPUT/", gsub(".txt", "_output.csv", basename(input_files[1])))
write.table(Go_output, file = output_file, sep = ",", row.names = F, col.names = T, append = TRUE)
input_files <- list.files(path = "COMPILED_DATA/GO_GENE_LISTS/GO_Input/", pattern = ".txt", full.names = TRUE)
input_genes <- read.table(input_files[1], header = F, stringsAsFactors = F)
input_genes <- input_genes[,1]
input_genename <- bitr(input_genes, fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
background_genes_all <- read.table(file = "COMPILED_DATA/GO_GENE_LISTS/Background_all.txt", header = F, stringsAsFactors = F)
background_genes_all <- background_genes_all[,1]
background_genename_all <- bitr(background_genes_all, fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
Go_output <- enrichGO(gene = input_genes_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "BP", pvalueCutoff = 0.1, universe = background_genename_all[,2])
output_file <- paste0("COMPILED_DATA/GO_OUTPUT/", gsub(".txt", "_output.csv", basename(input_files[1])))
write.table(Go_output, file = output_file, sep = ",", row.names = F, col.names = T, append = TRUE)
for (file in input_files) {
print(file)
}
library(org.Sc.sgd.db)
library(clusterProfiler)
library(AnnotationDbi)
go_enrichment <- function(input_file, background_file, p_value_threshold = 0.05){
input_genes <- read.table(file = input_file,
header = F,
stringsAsFactors = F)
input_genename <- bitr(input_genes[,1], fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
background_genes_all <- read.table(file = background_file,
header = F,
stringsAsFactors = F)
background_genename_all <- bitr(background_genes_all[,1], fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
Go_output_BP <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "BP", pvalueCutoff = 0.1, universe = background_genename_all[,2])
Go_output_MP <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "MP", pvalueCutoff = 0.1, universe = background_genename_all[,2])
Go_output_CC <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "CC", pvalueCutoff = 0.1, universe = background_genename_all[,2])
go_terms <- rbind(as.data.frame(Go_output_BP), as.data.frame(Go_output_MP), as.data.frame(Go_output_CC))
output_file <- paste0("COMPILED_DATA/GO_OUTPUT/", gsub(".txt", "_output.csv", basename(input_file)))
write.table(go_terms, file = output_file, sep = ",", row.names = F, col.names = T)
}
input_files <- list.files(path = "COMPILED_DATA/GO_GENE_LISTS/GO_Input/", pattern = ".txt", full.names = TRUE)
for (file in input_files) {
go_enrichment(input_file = file, background_file = "COMPILED_DATA/GO_GENE_LISTS/Background_all.txt")
}
go_enrichment <- function(input_file, background_file, p_value_threshold = 0.05){
input_genes <- read.table(file = input_file,
header = F,
stringsAsFactors = F)
input_genename <- bitr(input_genes[,1], fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
background_genes_all <- read.table(file = background_file,
header = F,
stringsAsFactors = F)
background_genename_all <- bitr(background_genes_all[,1], fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
Go_output_BP <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "BP", pvalueCutoff = 0.1, universe = background_genename_all[,2])
Go_output_MF <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "MF", pvalueCutoff = 0.1, universe = background_genename_all[,2])
Go_output_CC <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "CC", pvalueCutoff = 0.1, universe = background_genename_all[,2])
go_terms <- rbind(as.data.frame(Go_output_BP), as.data.frame(Go_output_MF), as.data.frame(Go_output_CC))
output_file <- paste0("COMPILED_DATA/GO_OUTPUT/", gsub(".txt", "_output.csv", basename(input_file)))
write.table(go_terms, file = output_file, sep = ",", row.names = F, col.names = T)
}
input_files <- list.files(path = "COMPILED_DATA/GO_GENE_LISTS/GO_Input/", pattern = ".txt", full.names = TRUE)
for (file in input_files) {
go_enrichment(input_file = file, background_file = "COMPILED_DATA/GO_GENE_LISTS/Background_all.txt")
}
length(as.data.frame(Go_output_BP))
nrow(as.data.frame(Go_output_BP))
rep(x = "BP", 10)
Go_output_BP <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "BP", pvalueCutoff = 0.1, universe = background_genename_all[,2])
nrow(as.data.frame(Go_output_BP))
df = data.frame(matrix(nrow = 1, ncol = 9))
library(org.Sc.sgd.db)
library(clusterProfiler)
library(AnnotationDbi)
go_enrichment <- function(input_file, background_file, p_value_threshold = 0.05){
input_genes <- read.table(file = input_file,
header = F,
stringsAsFactors = F)
input_genename <- bitr(input_genes[,1], fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
background_genes_all <- read.table(file = background_file,
header = F,
stringsAsFactors = F)
background_genename_all <- bitr(background_genes_all[,1], fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
Go_output_BP <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "BP", pvalueCutoff = p_value_threshold, universe = background_genename_all[,2])
Go_output_MF <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "MF", pvalueCutoff = p_value_threshold, universe = background_genename_all[,2])
Go_output_CC <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "CC", pvalueCutoff = p_value_threshold, universe = background_genename_all[,2])
df = data.frame(matrix(nrow = 1, ncol = 9))
go_terms <- rbind(as.data.frame(Go_output_BP), df, as.data.frame(Go_output_MF), df, as.data.frame(Go_output_CC))
output_file <- paste0("COMPILED_DATA/GO_OUTPUT/", gsub(".txt", "_output.csv", basename(input_file)))
write.table(go_terms, file = output_file, sep = ",", row.names = F, col.names = T)
}
input_files <- list.files(path = "COMPILED_DATA/GO_GENE_LISTS/GO_Input/", pattern = ".txt", full.names = TRUE)
for (file in input_files) {
go_enrichment(input_file = file, background_file = "COMPILED_DATA/GO_GENE_LISTS/Background_all.txt", p_value_threshold = 0.1)
}
df = data.frame(matrix(nrow = 1, ncol = 9))
colnames(df) <- c("ID", "Description", "GeneRatio",	"BgRatio",	"pvalue",	"p.adjust",	"qvalue",	"geneID",	"Count")
go_enrichment <- function(input_file, background_file, p_value_threshold = 0.05){
input_genes <- read.table(file = input_file,
header = F,
stringsAsFactors = F)
input_genename <- bitr(input_genes[,1], fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
background_genes_all <- read.table(file = background_file,
header = F,
stringsAsFactors = F)
background_genename_all <- bitr(background_genes_all[,1], fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
Go_output_BP <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "BP", pvalueCutoff = p_value_threshold, universe = background_genename_all[,2])
Go_output_MF <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "MF", pvalueCutoff = p_value_threshold, universe = background_genename_all[,2])
Go_output_CC <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "CC", pvalueCutoff = p_value_threshold, universe = background_genename_all[,2])
df = data.frame(matrix(nrow = 1, ncol = 9))
colnames(df) <- c("ID", "Description", "GeneRatio",	"BgRatio",	"pvalue",	"p.adjust",	"qvalue",	"geneID",	"Count")
go_terms <- rbind(as.data.frame(Go_output_BP), df, as.data.frame(Go_output_MF), df, as.data.frame(Go_output_CC))
output_file <- paste0("COMPILED_DATA/GO_OUTPUT/", gsub(".txt", "_output.csv", basename(input_file)))
write.table(go_terms, file = output_file, sep = ",", row.names = F, col.names = T)
}
input_files <- list.files(path = "COMPILED_DATA/GO_GENE_LISTS/GO_Input/", pattern = ".txt", full.names = TRUE)
for (file in input_files) {
go_enrichment(input_file = file, background_file = "COMPILED_DATA/GO_GENE_LISTS/Background_all.txt", p_value_threshold = 0.1)
}
input_files <- list.files(path = "COMPILED_DATA/GO_GENE_LISTS/GO_Input_wo_GRG/", pattern = ".txt", full.names = TRUE)
for (file in input_files) {
go_enrichment(input_file = file, background_file = "COMPILED_DATA/GO_GENE_LISTS/BACKGROUND_GENESET_SGD_DB_ID.txt", p_value_threshold = 0.1)
}
BiocManager::install("vsn")
BiocManager::install("apeglm")
BiocManager::install("EnhancedVolcano")
knitr::opts_chunk$set(echo = TRUE)
knitr::purl("MixTox_Transcriptomics_Downstream_Analysis.Rmd", documentation = 2)
str(GO_salt_DH_all)
str(salt_DH_des)
str(salt_SC_des)
str(salt1_DH_des)
knitr::opts_chunk$set(echo = TRUE)
GO_salt1_DH_all <- salt1_DH_des[which(abs(salt1_DH_des$log2FoldChange) >= 1
& salt1_DH_des$padj <= 0.05), 12]
str(GO_salt1_DH_all)
GO_salt1_DH_all <- salt1_DH_des[which(abs(salt1_DH_des$log2FoldChange) >= 1
& salt1_DH_des$padj <= 0.05), 12]
GO_salt1_DH_up <- salt1_DH_des[which(salt1_DH_des$log2FoldChange>= 1
& salt1_DH_des$padj <= 0.05), 12]
GO_salt1_DH_down <- salt1_DH_des[which(salt1_DH_des$log2FoldChange <= -1
& salt1_DH_des$padj <= 0.05), 12]
write.table(GO_salt1_DH_all, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_salt1_DH_all.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_salt1_DH_up, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_salt1_DH_up.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_salt1_DH_down, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_salt1_DH_down.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
length(GO_salt1_DH_up)
length(GO_salt1_DH_down)
GO_salt1_DH_up <- salt1_DH_des[which(salt1_DH_des$log2FoldChange>= 1
& salt1_DH_des$padj <= 0.05), 7]
write.table(GO_salt1_DH_up, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_salt1_DH_up.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
salt1_DH_des[1, ["SGD_DB_ID"]]
salt1_DH_des[1, "SGD_DB_ID"]
GO_salt1_DH_all <- salt1_DH_des[which(abs(salt1_DH_des$log2FoldChange) >= 1
& salt1_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_salt1_DH_up <- salt1_DH_des[which(salt1_DH_des$log2FoldChange>= 1
& salt1_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_salt1_DH_down <- salt1_DH_des[which(salt1_DH_des$log2FoldChange <= -1
& salt1_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_salt1_DH_all <- salt1_DH_des[which(abs(salt1_DH_des$log2FoldChange) >= 1
& salt1_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_salt1_DH_up <- salt1_DH_des[which(salt1_DH_des$log2FoldChange>= 1
& salt1_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_salt1_DH_down <- salt1_DH_des[which(salt1_DH_des$log2FoldChange <= -1
& salt1_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_salt1_DH_all_wo_GRG <- salt1_DH_des[which((abs(salt1_DH_des$log2FoldChange) >= 1 & salt1_DH_des$padj <= 0.05)
& !(salt1_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
GO_salt1_DH_up_wo_GRG <- salt1_DH_des[which((salt1_DH_des$log2FoldChange >= 1 & salt1_DH_des$padj <= 0.05)
& !(salt1_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
GO_salt1_DH_down_wo_GRG <- salt1_DH_des[which((salt1_DH_des$log2FoldChange <= -1 & salt1_DH_des$padj <= 0.05)
& !(salt1_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
write.table(GO_salt1_DH_all, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_salt1_DH_all.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_salt1_DH_up, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_salt1_DH_up.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_salt1_DH_up_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_salt1_DH_up_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_salt1_DH_down, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_salt1_DH_down.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_salt1_DH_down_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_salt1_DH_down_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_salt1_DH_all_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_salt1_DH_all_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
library(org.Sc.sgd.db)
library(clusterProfiler)
library(AnnotationDbi)
library(org.Sc.sgd.db)
library(clusterProfiler)
library(AnnotationDbi)
go_enrichment <- function(input_file, background_file, p_value_threshold = 0.05){
input_genes <- read.table(file = input_file,
header = F,
stringsAsFactors = F)
input_genename <- bitr(input_genes[,1], fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
background_genes_all <- read.table(file = background_file,
header = F,
stringsAsFactors = F)
background_genename_all <- bitr(background_genes_all[,1], fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
Go_output_BP <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "BP", pvalueCutoff = p_value_threshold, universe = background_genename_all[,2])
Go_output_MF <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "MF", pvalueCutoff = p_value_threshold, universe = background_genename_all[,2])
Go_output_CC <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "CC", pvalueCutoff = p_value_threshold, universe = background_genename_all[,2])
df = data.frame(matrix(nrow = 1, ncol = 9))
colnames(df) <- c("ID", "Description", "GeneRatio",	"BgRatio",	"pvalue",	"p.adjust",	"qvalue",	"geneID",	"Count")
go_terms <- rbind(as.data.frame(Go_output_BP), df, as.data.frame(Go_output_MF), df, as.data.frame(Go_output_CC))
output_file <- paste0("COMPILED_DATA/GO_OUTPUT_DH/GO_output_all/", gsub(".txt", "_output.csv", basename(input_file)))
write.table(go_terms, file = output_file, sep = ",", row.names = F, col.names = T)
}
input_files <- list.files(path = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/", pattern = ".txt", full.names = TRUE)
input_files
for (file in input_files) {go_enrichment(input_file = file, background_file = "COMPILED_DATA/GO_GENE_LISTS_SC/BACKGROUND_GENESET_SGD_DB_ID.txt", p_value_threshold = 0.1)}
GO_salt2_DH_all <- salt2_DH_des[which(abs(salt2_DH_des$log2FoldChange) >= 1
& salt2_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_salt2_DH_up <- salt2_DH_des[which(salt2_DH_des$log2FoldChange>= 1
& salt2_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_salt2_DH_down <- salt2_DH_des[which(salt2_DH_des$log2FoldChange <= -1
& salt2_DH_des$padj <= 0.05), "SGD_DB_ID"]
# WITHOUT GROWTH RELATED GENES
# Extracting list for GO analysis
GO_salt2_DH_all_wo_GRG <- salt2_DH_des[which((abs(salt2_DH_des$log2FoldChange) >= 1 & salt2_DH_des$padj <= 0.05)
& !(salt2_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
GO_salt2_DH_up_wo_GRG <- salt2_DH_des[which((salt2_DH_des$log2FoldChange >= 1 & salt2_DH_des$padj <= 0.05)
& !(salt2_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
GO_salt2_DH_down_wo_GRG <- salt2_DH_des[which((salt2_DH_des$log2FoldChange <= -1 & salt2_DH_des$padj <= 0.05)
& !(salt2_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
write.table(GO_salt2_DH_all, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/GO_salt2_DH_all.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_salt2_DH_all_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input_wo_GRG/GO_salt2_DH_all_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_salt2_DH_up_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input_wo_GRG/GO_salt2_DH_up_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_salt2_DH_down_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input_wo_GRG/GO_salt2_DH_down_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_salt2_DH_up, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/GO_salt2_DH_up.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_salt2_DH_down, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/GO_salt2_DH_down.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
length(GO_salt2_DH_up)
input_files <- list.files(path = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/", pattern = ".txt", full.names = TRUE)
for (file in input_files) {go_enrichment(input_file = file, background_file = "COMPILED_DATA/GO_GENE_LISTS_SC/BACKGROUND_GENESET_SGD_DB_ID.txt", p_value_threshold = 0.1)}
GO_para_DH_all <- para_DH_des[which(abs(para_DH_des$log2FoldChange) >= 1
& para_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_para_DH_up <- para_DH_des[which(para_DH_des$log2FoldChange>= 1
& para_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_para_DH_down <- para_DH_des[which(para_DH_des$log2FoldChange <= -1
& para_DH_des$padj <= 0.05), "SGD_DB_ID"]
# WITHOUT GROWTH RELATED GENES
GO_para_DH_all_wo_GRG <- para_DH_des[which((abs(para_DH_des$log2FoldChange) >= 1 & para_DH_des$padj <= 0.05)
& !(para_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
GO_para_DH_up_wo_GRG <- para_DH_des[which((para_DH_des$log2FoldChange >= 1 & para_DH_des$padj <= 0.05)
& !(para_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
GO_para_DH_down_wo_GRG <- para_DH_des[which((para_DH_des$log2FoldChange <= -1 & para_DH_des$padj <= 0.05)
& !(para_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
write.table(GO_para_DH_all, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/GO_para_DH_all.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_para_DH_all_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input_wo_GRG/GO_para_DH_all_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_para_DH_up_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input_wo_GRG/GO_para_DH_up_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_para_DH_down_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input_wo_GRG/GO_para_DH_down_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_para_DH_down, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/GO_para_DH_down.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_para_DH_up, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/GO_para_DH_up.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
input_files <- list.files(path = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/", pattern = ".txt", full.names = TRUE)
for (file in input_files) {go_enrichment(input_file = file, background_file = "COMPILED_DATA/GO_GENE_LISTS_SC/BACKGROUND_GENESET_SGD_DB_ID.txt", p_value_threshold = 0.1)}
GO_para_DH_up
knitr::opts_chunk$set(echo = TRUE)
GO_rapa_DH_all <- rapa_DH_des[which(abs(rapa_DH_des$log2FoldChange) >= 1
& rapa_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_rapa_DH_up <- rapa_DH_des[which(rapa_DH_des$log2FoldChange>= 1
& rapa_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_rapa_DH_down <- rapa_DH_des[which(rapa_DH_des$log2FoldChange <= -1
& rapa_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_rapa_DH_all_wo_GRG <- rapa_DH_des[which((abs(rapa_DH_des$log2FoldChange) >= 1 & rapa_DH_des$padj <= 0.05)
& !(rapa_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
GO_rapa_DH_up_wo_GRG <- rapa_DH_des[which((rapa_DH_des$log2FoldChange >= 1 & rapa_DH_des$padj <= 0.05)
& !(rapa_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
GO_rapa_DH_down_wo_GRG <- rapa_DH_des[which((rapa_DH_des$log2FoldChange <= -1 & rapa_DH_des$padj <= 0.05)
& !(rapa_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
write.table(GO_rapa_DH_all, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/GO_rapa_DH_all.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_rapa_DH_up, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/GO_rapa_DH_up.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_rapa_DH_down, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/GO_rapa_DH_down.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_rapa_DH_all_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input_wo_GRG/GO_rapa_DH_all_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_rapa_DH_up_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input_wo_GRG/GO_rapa_DH_up_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_rapa_DH_down_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input_wo_GRG/GO_rapa_DH_down_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
GO_SaPa_DH_all <- SaPa_DH_des[which(abs(SaPa_DH_des$log2FoldChange) >= 1
& SaPa_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_SaPa_DH_up <- SaPa_DH_des[which(SaPa_DH_des$log2FoldChange>= 1
& SaPa_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_SaPa_DH_down <- SaPa_DH_des[which(SaPa_DH_des$log2FoldChange <= -1
& SaPa_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_SaPa_DH_all_wo_GRG <- SaPa_DH_des[which((abs(SaPa_DH_des$log2FoldChange) >= 1 & SaPa_DH_des$padj <= 0.05)
& !(SaPa_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
GO_SaPa_DH_up_wo_GRG <- SaPa_DH_des[which((SaPa_DH_des$log2FoldChange >= 1 & SaPa_DH_des$padj <= 0.05)
& !(SaPa_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
GO_SaPa_DH_down_wo_GRG <- SaPa_DH_des[which((SaPa_DH_des$log2FoldChange <= -1 & SaPa_DH_des$padj <= 0.05)
& !(SaPa_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
write.table(GO_SaPa_DH_down_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input_wo_GRG/GO_SaPa_DH_down_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_SaPa_DH_up_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input_wo_GRG/GO_SaPa_DH_up_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_SaPa_DH_all_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input_wo_GRG/GO_SaPa_DH_all_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_SaPa_DH_all, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/GO_SaPa_DH_all.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_SaPa_DH_up, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/GO_SaPa_DH_up.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_SaPa_DH_down, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/GO_SaPa_DH_down.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
GO_SaRa_DH_all <- SaRa_DH_des[which(abs(SaRa_DH_des$log2FoldChange) >= 1
& SaRa_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_SaRa_DH_up <- SaRa_DH_des[which(SaRa_DH_des$log2FoldChange>= 1
& SaRa_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_SaRa_DH_down <- SaRa_DH_des[which(SaRa_DH_des$log2FoldChange <= -1
& SaRa_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_SaRa_DH_all_wo_GRG <- SaRa_DH_des[which((abs(SaRa_DH_des$log2FoldChange) >= 1 & SaRa_DH_des$padj <= 0.05)
& !(SaRa_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
GO_SaRa_DH_up_wo_GRG <- SaRa_DH_des[which((SaRa_DH_des$log2FoldChange >= 1 & SaRa_DH_des$padj <= 0.05)
& !(SaRa_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
GO_SaRa_DH_down_wo_GRG <- SaRa_DH_des[which((SaRa_DH_des$log2FoldChange <= -1 & SaRa_DH_des$padj <= 0.05)
& !(SaRa_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
write.table(GO_SaRa_DH_down, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/GO_SaRa_DH_down.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_SaRa_DH_all, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/GO_SaRa_DH_all.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_SaRa_DH_up, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/GO_SaRa_DH_up.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_SaRa_DH_up_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input_wo_GRG/GO_SaRa_DH_up_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_SaRa_DH_down_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input_wo_GRG/GO_SaRa_DH_down_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_SaRa_DH_all_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input_wo_GRG/GO_SaRa_DH_all_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
library(org.Sc.sgd.db)
library(clusterProfiler)
library(AnnotationDbi)
go_enrichment <- function(input_file, background_file, p_value_threshold = 0.05){
input_genes <- read.table(file = input_file,
header = F,
stringsAsFactors = F)
input_genename <- bitr(input_genes[,1], fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
background_genes_all <- read.table(file = background_file,
header = F,
stringsAsFactors = F)
background_genename_all <- bitr(background_genes_all[,1], fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
Go_output_BP <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "BP", pvalueCutoff = p_value_threshold, universe = background_genename_all[,2])
Go_output_MF <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "MF", pvalueCutoff = p_value_threshold, universe = background_genename_all[,2])
Go_output_CC <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "CC", pvalueCutoff = p_value_threshold, universe = background_genename_all[,2])
df = data.frame(matrix(nrow = 1, ncol = 9))
colnames(df) <- c("ID", "Description", "GeneRatio",	"BgRatio",	"pvalue",	"p.adjust",	"qvalue",	"geneID",	"Count")
go_terms <- rbind(as.data.frame(Go_output_BP), df, as.data.frame(Go_output_MF), df, as.data.frame(Go_output_CC))
output_file <- paste0("COMPILED_DATA/GO_OUTPUT_DH/GO_output_all/", gsub(".txt", "_output.csv", basename(input_file)))
write.table(go_terms, file = output_file, sep = ",", row.names = F, col.names = T)
}
input_files <- list.files(path = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/", pattern = ".txt", full.names = TRUE)
for (file in input_files) {go_enrichment(input_file = file, background_file = "COMPILED_DATA/GO_GENE_LISTS_SC/Background_all.txt", p_value_threshold = 0.1)}
input_files
for (file in input_files) {go_enrichment(input_file = file, background_file = "COMPILED_DATA/GO_GENE_LISTS_SC/Background_all.txt", p_value_threshold = 0.1)}
go_enrichment <- function(input_file, background_file, p_value_threshold = 0.05){
input_genes <- read.table(file = input_file,
header = F,
stringsAsFactors = F)
input_genename <- bitr(input_genes[,1], fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
background_genes_all <- read.table(file = background_file,
header = F,
stringsAsFactors = F)
background_genename_all <- bitr(background_genes_all[,1], fromType="SGD", toType="GENENAME", OrgDb="org.Sc.sgd.db")
Go_output_BP <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "BP", pvalueCutoff = p_value_threshold, universe = background_genename_all[,2])
Go_output_MF <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "MF", pvalueCutoff = p_value_threshold, universe = background_genename_all[,2])
Go_output_CC <- enrichGO(gene = input_genename[,2], OrgDb = org.Sc.sgd.db, keyType = "GENENAME", ont = "CC", pvalueCutoff = p_value_threshold, universe = background_genename_all[,2])
df = data.frame(matrix(nrow = 1, ncol = 9))
colnames(df) <- c("ID", "Description", "GeneRatio",	"BgRatio",	"pvalue",	"p.adjust",	"qvalue",	"geneID",	"Count")
go_terms <- rbind(as.data.frame(Go_output_BP), df, as.data.frame(Go_output_MF), df, as.data.frame(Go_output_CC))
output_file <- paste0("COMPILED_DATA/GO_OUTPUT_DH/GO_output_all_wo_GRG/", gsub(".txt", "_output.csv", basename(input_file)))
write.table(go_terms, file = output_file, sep = ",", row.names = F, col.names = T)
}
input_files <- list.files(path = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input_wo_GRG/", pattern = ".txt", full.names = TRUE)
input_files <- list.files(path = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input_wo_GRG/", pattern = ".txt", full.names = TRUE)
for (file in input_files) {go_enrichment(input_file = file, background_file = "COMPILED_DATA/GO_GENE_LISTS_SC/BACKGROUND_GENESET_SGD_DB_ID.txt", p_value_threshold = 0.1)}
GO_SaPavsSalt1_DH_all <- SaPavsSalt1_DH_des[which(abs(SaPavsSalt1_DH_des$log2FoldChange) >= 1
& SaPavsSalt1_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_SaPavsSalt1_DH_up <- SaPavsSalt1_DH_des[which(SaPavsSalt1_DH_des$log2FoldChange>= 1
& SaPavsSalt1_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_SaPavsSalt1_DH_down <- SaPavsSalt1_DH_des[which(SaPavsSalt1_DH_des$log2FoldChange <= -1
& SaPavsSalt1_DH_des$padj <= 0.05), "SGD_DB_ID"]
GO_SaPavsSalt1_DH_all_wo_GRG <- SaPavsSalt1_DH_des[which((abs(SaPavsSalt1_DH_des$log2FoldChange) >= 1 & SaPavsSalt1_DH_des$padj <= 0.05)
& !(SaPavsSalt1_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
GO_SaPavsSalt1_DH_up_wo_GRG <- SaPavsSalt1_DH_des[which((SaPavsSalt1_DH_des$log2FoldChange >= 1 & SaPavsSalt1_DH_des$padj <= 0.05)
& !(SaPavsSalt1_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
GO_SaPavsSalt1_DH_down_wo_GRG <- SaPavsSalt1_DH_des[which((SaPavsSalt1_DH_des$log2FoldChange <= -1 & SaPavsSalt1_DH_des$padj <= 0.05)
& !(SaPavsSalt1_DH_des$SGD_DB_ID %in% GRG_ALL_SGD_DB_ID)), "SGD_DB_ID"]
write.table(GO_SaPavsSalt1_DH_all, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/GO_SaPavsSalt1_DH_all.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_SaPavsSalt1_DH_up, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/GO_SaPavsSalt1_DH_up.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_SaPavsSalt1_DH_down, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input/GO_SaPavsSalt1_DH_down.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_SaPavsSalt1_DH_down_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input_wo_GRG/GO_SaPavsSalt1_DH_down_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_SaPavsSalt1_DH_up_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input_wo_GRG/GO_SaPavsSalt1_DH_up_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
write.table(GO_SaPavsSalt1_DH_all_wo_GRG, file = "COMPILED_DATA/GO_GENE_LISTS_DH/GO_Input_wo_GRG/GO_SaPavsSalt1_DH_all_wo_GRG.txt", sep = "\t", na = "NA", row.names = FALSE, col.names = FALSE, quote = FALSE)
